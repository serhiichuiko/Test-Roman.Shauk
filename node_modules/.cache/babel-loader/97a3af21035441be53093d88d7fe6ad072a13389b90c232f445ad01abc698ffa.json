{"ast":null,"code":"var _jsxFileName = \"/home/user/test-task/my-app/src/components/MoonList/MoonList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport GenerateCircle from '../GenerateCircle';\nimport MoonItem from '../MoonItem';\nimport './MoonList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoonList = _ref => {\n  _s();\n  var _refPlanet$current, _refPlanet$current$ge, _refPlanet$current2, _refPlanet$current2$g;\n  let {\n    title,\n    moons\n  } = _ref;\n  const [moonsCount, setMoonsCount] = useState([]);\n  const refPlanet = useRef(null);\n  const toggleMoon = itemId => {\n    const itemIndex = moonsCount.findIndex(item => item.id === itemId);\n    if (itemIndex !== -1) {\n      // Item exists, remove it from the array\n      setMoonsCount(prevItems => prevItems.filter(item => item.id !== itemId));\n    } else {\n      // Item doesn't exist, add it to the array\n      const newItem = {\n        id: itemId,\n        title: `Item ${itemId}`\n      };\n      setMoonsCount(prevItems => [...prevItems, newItem]);\n    }\n  };\n  const planetWidth = (_refPlanet$current = refPlanet.current) === null || _refPlanet$current === void 0 ? void 0 : (_refPlanet$current$ge = _refPlanet$current.getBoundingClientRect()) === null || _refPlanet$current$ge === void 0 ? void 0 : _refPlanet$current$ge.width;\n  const planetHeight = (_refPlanet$current2 = refPlanet.current) === null || _refPlanet$current2 === void 0 ? void 0 : (_refPlanet$current2$g = _refPlanet$current2.getBoundingClientRect()) === null || _refPlanet$current2$g === void 0 ? void 0 : _refPlanet$current2$g.height;\n  console.log('moonsCount', moonsCount, typeof moonsCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planetBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: refPlanet,\n      className: \"planet\",\n      children: [/*#__PURE__*/_jsxDEV(GenerateCircle, {\n        moonsCount: moonsCount,\n        planetWidth: planetWidth,\n        planetHeight: planetHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), title, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        children: moonsCount.length || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MoonItem, {\n      moons: moons,\n      toggleMoon: toggleMoon,\n      moonsCount: moonsCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(MoonList, \"to+SCjU01NHXq7McNFPBhsYwK/Q=\");\n_c = MoonList;\nexport default MoonList;\nvar _c;\n$RefreshReg$(_c, \"MoonList\");","map":{"version":3,"names":["React","useRef","useState","GenerateCircle","MoonItem","jsxDEV","_jsxDEV","MoonList","_ref","_s","_refPlanet$current","_refPlanet$current$ge","_refPlanet$current2","_refPlanet$current2$g","title","moons","moonsCount","setMoonsCount","refPlanet","toggleMoon","itemId","itemIndex","findIndex","item","id","prevItems","filter","newItem","planetWidth","current","getBoundingClientRect","width","planetHeight","height","console","log","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/home/user/test-task/my-app/src/components/MoonList/MoonList.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport GenerateCircle from '../GenerateCircle'\nimport MoonItem from '../MoonItem'\n\nimport './MoonList.css';\n\ninterface Planet {\n    id: number,\n    title: string,\n    moons: MoonProps[],\n}\n\ninterface MoonProps {\n    id: number,\n    planetId: number,\n    title: string,\n}\n\ninterface MoonCount {\n    id: number,\n    title: string\n}\n\nconst MoonList: React.FC<Planet> = ({\n    title,\n    moons,\n}) => {\n    const [moonsCount, setMoonsCount] = useState<MoonCount[]>([]);\n    const refPlanet = useRef<HTMLDivElement>(null);\n    const toggleMoon = (itemId: number) => {\n        const itemIndex = moonsCount.findIndex(item => item.id === itemId);\n    \n        if (itemIndex !== -1) {\n          // Item exists, remove it from the array\n          setMoonsCount(prevItems => prevItems.filter(item => item.id !== itemId));\n        } else {\n          // Item doesn't exist, add it to the array\n          const newItem: MoonCount = { id: itemId, title: `Item ${itemId}` };\n          setMoonsCount(prevItems => [...prevItems, newItem]);\n        }\n      };\n      const planetWidth = refPlanet.current?.getBoundingClientRect()?.width;\n      const planetHeight = refPlanet.current?.getBoundingClientRect()?.height;\n      console.log('moonsCount', moonsCount, typeof moonsCount);\n    return (\n        <div className='planetBlock'>\n            <div ref={refPlanet} className='planet'>\n                    <GenerateCircle moonsCount={moonsCount} planetWidth={planetWidth} planetHeight={planetHeight} />\n                {title}\n                <span className='count'>{moonsCount.length || ''}</span>\n            </div>\n            <MoonItem moons={moons} toggleMoon={toggleMoon} moonsCount={moonsCount} />\n        </div>\n    )\n}\n\nexport default MoonList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}