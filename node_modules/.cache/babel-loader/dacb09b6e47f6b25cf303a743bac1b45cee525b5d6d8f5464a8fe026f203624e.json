{"ast":null,"code":"var _jsxFileName = \"/home/user/test-task/my-app/src/components/Moon/Moon.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Moon.css';\nimport { planets, moons } from '../../constats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Moon = () => {\n  _s();\n  const [isPlanets, setIsPlanets] = useState(planets);\n  const planetsWithMoons = planets.map(planet => {\n    const matchedMoons = moons.filter(moon => moon.planetId === planet.id);\n    return {\n      ...planet,\n      moons: matchedMoons\n    };\n  });\n  const handleClickOnMoon = (planetId, moonId) => {\n    setIsPlanets(prevPlanets => {\n      return prevPlanets.map(planet => {\n        if (planet.id === planetId) {\n          const count = planet.count ? planet.count + 1 : 1;\n          return {\n            ...planet,\n            count\n          };\n        }\n        return planet;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block\",\n      children: planetsWithMoons.map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planetBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planet\",\n          children: [planet.title, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: planet.count || null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), planet.moons.map(moon => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moon\",\n          onClick: () => handleClickOnMoon(planet.id, moon.id),\n          children: moon.title\n        }, moon.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this))]\n      }, planet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block\",\n      children: planets.map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planetBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planet\",\n          children: [planet.title, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: planet.count || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), moons.filter(moon => moon.planetId === planet.id).map(moon => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moon\",\n          onClick: () => handleClickOnMoon(planet.id, moon.id),\n          children: moon.title\n        }, moon.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this))]\n      }, planet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Moon, \"7daW4bsTQltuwTO3Mr/Jm7hk4P8=\");\n_c = Moon;\nexport default Moon;\nvar _c;\n$RefreshReg$(_c, \"Moon\");","map":{"version":3,"names":["React","useState","planets","moons","jsxDEV","_jsxDEV","Fragment","_Fragment","Moon","_s","isPlanets","setIsPlanets","planetsWithMoons","map","planet","matchedMoons","filter","moon","planetId","id","handleClickOnMoon","moonId","prevPlanets","count","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/user/test-task/my-app/src/components/Moon/Moon.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Moon.css';\nimport { planets, moons } from '../../constats'\n\nconst Moon = () => {\n    const [isPlanets, setIsPlanets] = useState(planets);\n    const planetsWithMoons = planets.map(planet => {\n        const matchedMoons = moons.filter(moon => moon.planetId === planet.id);\n        return {\n          ...planet,\n          moons: matchedMoons\n        };\n      });\n      \n      const handleClickOnMoon = (planetId: number, moonId: number) => {\n        setIsPlanets(prevPlanets => {\n          return prevPlanets.map(planet => {\n            if (planet.id === planetId) {\n              const count = planet.count ? planet.count + 1 : 1;\n              return { ...planet, count };\n            }\n            return planet;\n          });\n        });\n      };\n    return (\n        <>\n        <div className='block'>\n            {planetsWithMoons.map((planet) => (\n                <div key={planet.id} className='planetBlock'>\n                    <div className='planet'>\n                        {planet.title}\n                        <span>{planet.count || null}</span>\n                    </div>\n                    {\n                        planet.moons.map((moon) => (\n                            <div\n                                className='moon'\n                                onClick={() => handleClickOnMoon(planet.id, moon.id)}\n                                key={moon.id}>\n                                    {moon.title}\n                            </div>\n                        ))\n                    }\n                </div>\n            ))}\n        </div>\n        <div className='block'>\n            {planets.map(planet => (\n                <div key={planet.id} className='planetBlock'>\n                <div className='planet'>\n                    {planet.title}\n                    <span>{planet.count || 0}</span>\n                </div>\n                {moons\n                    .filter(moon => moon.planetId === planet.id)\n                    .map(moon => (\n                    <div\n                        className='moon'\n                        onClick={() => handleClickOnMoon(planet.id, moon.id)}\n                        key={moon.id}\n                    >\n                        {moon.title}\n                    </div>\n                    ))}\n                </div>\n            ))}\n            </div>\n        </>\n    )\n}\n\nexport default Moon;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}