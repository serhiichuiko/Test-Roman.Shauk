{"ast":null,"code":"var _jsxFileName = \"/home/user/test-task/my-app/src/components/Moon/Moon.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Moon.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Moon = _ref => {\n  _s();\n  let {\n    title,\n    moons\n  } = _ref;\n  const [moonsCount, setMoonsCount] = useState([]);\n  const toggleMoon = itemId => {\n    const itemIndex = moonsCount.findIndex(item => item.id === itemId);\n    if (itemIndex !== -1) {\n      // Item exists, remove it from the array\n      setMoonsCount(prevItems => prevItems.filter(item => item.id !== itemId));\n    } else {\n      // Item doesn't exist, add it to the array\n      const newItem = {\n        id: itemId,\n        title: `Item ${itemId}`\n      };\n      setMoonsCount(prevItems => [...prevItems, newItem]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planetBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planet\",\n      children: [moonsCount.map((moon, index) => /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)), title, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: moonsCount.length || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), moons.map(moon => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moon\",\n      onClick: () => toggleMoon(moon.id),\n      children: moon.title\n    }, moon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Moon, \"vcOsnumwDX1GQAYw4LEDOzZN+yo=\");\n_c = Moon;\nexport default Moon;\nvar _c;\n$RefreshReg$(_c, \"Moon\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Moon","_ref","_s","title","moons","moonsCount","setMoonsCount","toggleMoon","itemId","itemIndex","findIndex","item","id","prevItems","filter","newItem","className","children","map","moon","index","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["/home/user/test-task/my-app/src/components/Moon/Moon.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport './Moon.css';\n\ninterface Planet {\n    id: number,\n    title: string,\n    moons: Moon[],\n}\n\ninterface Moon {\n    id: number,\n    planetId: number,\n    title: string,\n}\n\ninterface MoonCount {\n    id: number,\n    title: string\n}\n\nconst Moon: React.FC<Planet> = ({\n    title,\n    moons,\n}) => {\n    const [moonsCount, setMoonsCount] = useState<MoonCount[]>([]);\n    const toggleMoon = (itemId: number) => {\n        const itemIndex = moonsCount.findIndex(item => item.id === itemId);\n    \n        if (itemIndex !== -1) {\n          // Item exists, remove it from the array\n          setMoonsCount(prevItems => prevItems.filter(item => item.id !== itemId));\n        } else {\n          // Item doesn't exist, add it to the array\n          const newItem: MoonCount = { id: itemId, title: `Item ${itemId}` };\n          setMoonsCount(prevItems => [...prevItems, newItem]);\n        }\n      };\n    return (\n        <div className='planetBlock'>\n            <div className='planet'>\n                {moonsCount.map((moon, index) => (\n                <div key={index}></div>\n                ))}\n                {title}\n                <span>{moonsCount.length || ''}</span>\n            </div>\n            {\n                moons.map((moon) => (\n                    <div\n                        className='moon'\n                        onClick={() => toggleMoon(moon.id)}\n                        key={moon.id}>\n                            {moon.title}\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Moon;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAGvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBpB,MAAMC,IAAsB,GAAGC,IAAA,IAGzB;EAAAC,EAAA;EAAA,IAH0B;IAC5BC,KAAK;IACLC;EACJ,CAAC,GAAAH,IAAA;EACG,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAc,EAAE,CAAC;EAC7D,MAAMU,UAAU,GAAIC,MAAc,IAAK;IACnC,MAAMC,SAAS,GAAGJ,UAAU,CAACK,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC;IAElE,IAAIC,SAAS,KAAK,CAAC,CAAC,EAAE;MACpB;MACAH,aAAa,CAACO,SAAS,IAAIA,SAAS,CAACC,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC,CAAC;IAC1E,CAAC,MAAM;MACL;MACA,MAAMO,OAAkB,GAAG;QAAEH,EAAE,EAAEJ,MAAM;QAAEL,KAAK,EAAG,QAAOK,MAAO;MAAE,CAAC;MAClEF,aAAa,CAACO,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEE,OAAO,CAAC,CAAC;IACrD;EACF,CAAC;EACH,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBlB,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAClBZ,UAAU,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BrB,OAAA,YAAUqB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACrB,CAAC,EACDrB,KAAK,eACNJ,OAAA;QAAAkB,QAAA,EAAOZ,UAAU,CAACoB,MAAM,IAAI;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EAEFpB,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACXpB,OAAA;MACIiB,SAAS,EAAC,MAAM;MAChBU,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACY,IAAI,CAACP,EAAE,CAAE;MAAAK,QAAA,EAE9BE,IAAI,CAAChB;IAAK,GADVgB,IAAI,CAACP,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAtCKF,IAAsB;AAAA2B,EAAA,GAAtB3B,IAAsB;AAwC5B,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}