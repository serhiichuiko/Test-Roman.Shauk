{"ast":null,"code":"var _jsxFileName = \"/home/user/test-task/my-app/src/components/Moon/Moon.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Moon.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Moon = _ref => {\n  _s();\n  let {\n    title,\n    moons\n  } = _ref;\n  const [count, setCount] = useState(0);\n  const [moonsCount, setMoonsCount] = useState([]);\n  const toggleMoon = itemId => {\n    const itemIndex = items.findIndex(item => item.id === itemId);\n    if (itemIndex !== -1) {\n      // Item exists, remove it from the array\n      setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n    } else {\n      // Item doesn't exist, add it to the array\n      const newItem = {\n        id: itemId,\n        name: `Item ${itemId}`\n      };\n      setItems(prevItems => [...prevItems, newItem]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planetBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planet\",\n      children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: moonsCount.length || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), moons.map(moon => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moon\",\n      id: moon.id.toString(),\n      onClick: handleClickOnMoon,\n      children: moon.title\n    }, moon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Moon, \"5msmci+/Wr9TTFwjLuOvrx6ppQg=\");\n_c = Moon;\nexport default Moon;\nvar _c;\n$RefreshReg$(_c, \"Moon\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Moon","_ref","_s","title","moons","count","setCount","moonsCount","setMoonsCount","toggleMoon","itemId","itemIndex","items","findIndex","item","id","setItems","prevItems","filter","newItem","name","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","moon","toString","onClick","handleClickOnMoon","_c","$RefreshReg$"],"sources":["/home/user/test-task/my-app/src/components/Moon/Moon.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Moon.css';\n\ninterface Planet {\n    id: number,\n    title: string,\n    moons: Moon[],\n}\n\ninterface Moon {\n    id: number,\n    planetId: number,\n    title: string,\n}\n\ninterface MoonCount {\n    id: number,\n    title: string\n}\n\nconst Moon: React.FC<Planet> = ({\n    title,\n    moons,\n}) => {\n    const [count, setCount] = useState(0);\n    const [moonsCount, setMoonsCount] = useState<MoonCount[]>([]);\n    const toggleMoon = (itemId: number) => {\n        const itemIndex = items.findIndex(item => item.id === itemId);\n    \n        if (itemIndex !== -1) {\n          // Item exists, remove it from the array\n          setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n        } else {\n          // Item doesn't exist, add it to the array\n          const newItem: Item = { id: itemId, name: `Item ${itemId}` };\n          setItems(prevItems => [...prevItems, newItem]);\n        }\n      };\n    return (\n        <div className='planetBlock'>\n            <div className='planet'>\n                {title}\n                <span>{moonsCount.length || ''}</span>\n            </div>\n            {\n                moons.map((moon) => (\n                    <div\n                        className='moon'\n                        id={moon.id.toString()}\n                        onClick={handleClickOnMoon}\n                        key={moon.id}>\n                            {moon.title}\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Moon;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBpB,MAAMC,IAAsB,GAAGC,IAAA,IAGzB;EAAAC,EAAA;EAAA,IAH0B;IAC5BC,KAAK;IACLC;EACJ,CAAC,GAAAH,IAAA;EACG,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAc,EAAE,CAAC;EAC7D,MAAMY,UAAU,GAAIC,MAAc,IAAK;IACnC,MAAMC,SAAS,GAAGC,KAAK,CAACC,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC;IAE7D,IAAIC,SAAS,KAAK,CAAC,CAAC,EAAE;MACpB;MACAK,QAAQ,CAACC,SAAS,IAAIA,SAAS,CAACC,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC,CAAC;IACrE,CAAC,MAAM;MACL;MACA,MAAMS,OAAa,GAAG;QAAEJ,EAAE,EAAEL,MAAM;QAAEU,IAAI,EAAG,QAAOV,MAAO;MAAE,CAAC;MAC5DM,QAAQ,CAACC,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEE,OAAO,CAAC,CAAC;IAChD;EACF,CAAC;EACH,oBACIpB,OAAA;IAAKsB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBvB,OAAA;MAAKsB,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAClBnB,KAAK,eACNJ,OAAA;QAAAuB,QAAA,EAAOf,UAAU,CAACgB,MAAM,IAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EAEFvB,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBACX9B,OAAA;MACIsB,SAAS,EAAC,MAAM;MAChBN,EAAE,EAAEc,IAAI,CAACd,EAAE,CAACe,QAAQ,CAAC,CAAE;MACvBC,OAAO,EAAEC,iBAAkB;MAAAV,QAAA,EAEtBO,IAAI,CAAC1B;IAAK,GADV0B,IAAI,CAACd,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAAzB,EAAA,CArCKF,IAAsB;AAAAiC,EAAA,GAAtBjC,IAAsB;AAuC5B,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}